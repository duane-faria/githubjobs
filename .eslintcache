[{"D:\\Meus arquivos\\Projetos\\githubjobs\\src\\index.js":"1","D:\\Meus arquivos\\Projetos\\githubjobs\\src\\App.js":"2","D:\\Meus arquivos\\Projetos\\githubjobs\\src\\components\\SearchBar.js":"3","D:\\Meus arquivos\\Projetos\\githubjobs\\src\\style\\global.js":"4","D:\\Meus arquivos\\Projetos\\githubjobs\\src\\components\\Logo.js":"5","D:\\Meus arquivos\\Projetos\\githubjobs\\src\\components\\ListItem.js":"6","D:\\Meus arquivos\\Projetos\\githubjobs\\src\\components\\Aside.js":"7","D:\\Meus arquivos\\Projetos\\githubjobs\\src\\components\\CheckBox.js":"8","D:\\Meus arquivos\\Projetos\\githubjobs\\src\\components\\Input.js":"9","D:\\Meus arquivos\\Projetos\\githubjobs\\src\\constants\\index.js":"10","D:\\Meus arquivos\\Projetos\\githubjobs\\src\\constants\\icons.js":"11","D:\\Meus arquivos\\Projetos\\githubjobs\\src\\constants\\fonts.js":"12","D:\\Meus arquivos\\Projetos\\githubjobs\\src\\style\\colors.js":"13","D:\\Meus arquivos\\Projetos\\githubjobs\\src\\api\\index.js":"14","D:\\Meus arquivos\\Projetos\\githubjobs\\src\\api\\jobs.js":"15","D:\\Meus arquivos\\Projetos\\githubjobs\\src\\utils\\date.js":"16","D:\\Meus arquivos\\Projetos\\githubjobs\\src\\pages\\Jobs.js":"17","D:\\Meus arquivos\\Projetos\\githubjobs\\src\\routes\\index.js":"18","D:\\Meus arquivos\\Projetos\\githubjobs\\src\\pages\\JobDetail.js":"19","D:\\Meus arquivos\\Projetos\\githubjobs\\src\\pages\\NotFound.js":"20","D:\\Meus arquivos\\Projetos\\githubjobs\\src\\components\\Badge.js":"21"},{"size":197,"mtime":1606871356993,"results":"22","hashOfConfig":"23"},{"size":504,"mtime":1607010564475,"results":"24","hashOfConfig":"23"},{"size":1979,"mtime":1607092725617,"results":"25","hashOfConfig":"23"},{"size":1126,"mtime":1607011353066,"results":"26","hashOfConfig":"23"},{"size":485,"mtime":1606921405225,"results":"27","hashOfConfig":"23"},{"size":3050,"mtime":1607008549410,"results":"28","hashOfConfig":"23"},{"size":2173,"mtime":1607051092854,"results":"29","hashOfConfig":"23"},{"size":1195,"mtime":1607050313959,"results":"30","hashOfConfig":"23"},{"size":1076,"mtime":1607028347953,"results":"31","hashOfConfig":"23"},{"size":88,"mtime":1606925535042,"results":"32","hashOfConfig":"23"},{"size":325,"mtime":1607002770625,"results":"33","hashOfConfig":"23"},{"size":118,"mtime":1606935948413,"results":"34","hashOfConfig":"23"},{"size":162,"mtime":1606948198387,"results":"35","hashOfConfig":"23"},{"size":381,"mtime":1607352060147,"results":"36","hashOfConfig":"23"},{"size":1024,"mtime":1607354743274,"results":"37","hashOfConfig":"23"},{"size":869,"mtime":1606949327822,"results":"38","hashOfConfig":"23"},{"size":2263,"mtime":1607092414250,"results":"39","hashOfConfig":"23"},{"size":437,"mtime":1607002451249,"results":"40","hashOfConfig":"23"},{"size":3703,"mtime":1607011382101,"results":"41","hashOfConfig":"23"},{"size":117,"mtime":1607002443542,"results":"42","hashOfConfig":"23"},{"size":584,"mtime":1607004851602,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1sz7ptr",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"D:\\Meus arquivos\\Projetos\\githubjobs\\src\\index.js",[],["90","91"],"D:\\Meus arquivos\\Projetos\\githubjobs\\src\\App.js",[],"D:\\Meus arquivos\\Projetos\\githubjobs\\src\\components\\SearchBar.js",[],"D:\\Meus arquivos\\Projetos\\githubjobs\\src\\style\\global.js",[],"D:\\Meus arquivos\\Projetos\\githubjobs\\src\\components\\Logo.js",[],"D:\\Meus arquivos\\Projetos\\githubjobs\\src\\components\\ListItem.js",[],"D:\\Meus arquivos\\Projetos\\githubjobs\\src\\components\\Aside.js",["92","93"],"import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport CheckBox from './CheckBox';\r\nimport Input from './Input';\r\nimport { icons, fonts } from 'constants/index';\r\nimport colors from 'style/colors';\r\n\r\n// const locations = [\r\n//   { value: 'London', checked: false },\r\n//   { value: 'New York', checked: false },\r\n//   { value: 'Amsterdam', checked: false },\r\n//   { value: 'Berlin', checked: false },\r\n// ];\r\n\r\nexport default function Aside({\r\n  loc,\r\n  setLoc,\r\n  fullTime,\r\n  setFullTime,\r\n  place,\r\n  setPlace,\r\n}) {\r\n  const [locations, setLocations] = React.useState([\r\n    { value: 'London', checked: false },\r\n    { value: 'New York', checked: false },\r\n    { value: 'Amsterdam', checked: false },\r\n    { value: 'Berlin', checked: false },\r\n  ]);\r\n  return (\r\n    <Container>\r\n      <CheckBox title='Full time' checked={fullTime} setChecked={setFullTime} />\r\n      <Title>Local</Title>\r\n      <Input\r\n        placeholder='PaÃ­s, estado, cidade'\r\n        icon={icons.world}\r\n        containerStyle={{ marginBottom: '25px', marginRight: '25px' }}\r\n        value={loc}\r\n        onChange={({ target }) => setLoc(target.value)}\r\n      />\r\n      {locations.map((location) => (\r\n        <CheckBox\r\n          checked={location.checked}\r\n          setChecked={(check, value) => {\r\n            locations.map((l, i) => {\r\n              if (l.value == value) {\r\n                let _temp = [...locations];\r\n                _temp[i].checked = check;\r\n                setLocations(_temp);\r\n                setPlace(value);\r\n                if (!check) setPlace(undefined);\r\n              } else {\r\n                l.checked = false;\r\n              }\r\n            });\r\n          }}\r\n          title={location.value}\r\n          key={location.value}\r\n          style={{ marginBottom: '20px' }}\r\n          places={true}\r\n        />\r\n      ))}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Title = styled.h4`\r\n  margin-top: 32px;\r\n  margin-bottom: 14px;\r\n  font-family: ${fonts.poppins};\r\n  font-weight: 700;\r\n  text-transform: uppercase;\r\n  font-size: 14px;\r\n  color: ${colors.gray};\r\n`;\r\n","D:\\Meus arquivos\\Projetos\\githubjobs\\src\\components\\CheckBox.js",[],"D:\\Meus arquivos\\Projetos\\githubjobs\\src\\components\\Input.js",[],"D:\\Meus arquivos\\Projetos\\githubjobs\\src\\constants\\index.js",[],"D:\\Meus arquivos\\Projetos\\githubjobs\\src\\constants\\icons.js",[],"D:\\Meus arquivos\\Projetos\\githubjobs\\src\\constants\\fonts.js",[],"D:\\Meus arquivos\\Projetos\\githubjobs\\src\\style\\colors.js",[],"D:\\Meus arquivos\\Projetos\\githubjobs\\src\\api\\index.js",[],"D:\\Meus arquivos\\Projetos\\githubjobs\\src\\api\\jobs.js",["94"],"D:\\Meus arquivos\\Projetos\\githubjobs\\src\\utils\\date.js",[],"D:\\Meus arquivos\\Projetos\\githubjobs\\src\\pages\\Jobs.js",["95"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Skeleton from 'react-loading-skeleton';\r\n\r\nimport SearchBar from 'components/SearchBar';\r\nimport Aside from 'components/Aside';\r\nimport ListItem from 'components/ListItem';\r\nimport { getJobs } from 'api/jobs';\r\n\r\nexport default function Jobs() {\r\n  const [jobs, setJobs] = React.useState([]);\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  const [loc, setLoc] = React.useState('');\r\n  const [fullTime, setFullTime] = React.useState(true);\r\n  const [place, setPlace] = React.useState('');\r\n  const [desc, setDesc] = React.useState('');\r\n\r\n  React.useEffect(() => {\r\n    get({ location: loc || place, full_time: fullTime, description: desc });\r\n  }, [loc, fullTime, place]);\r\n\r\n  async function get(location) {\r\n    setLoading(true);\r\n    const data = await getJobs(location);\r\n    setJobs(data);\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SearchBar\r\n        value={desc}\r\n        onChange={setDesc}\r\n        search={() => get({ description: desc })}\r\n      />\r\n      <Content>\r\n        <Aside\r\n          loc={loc}\r\n          setLoc={setLoc}\r\n          fullTime={fullTime}\r\n          setFullTime={setFullTime}\r\n          place={place}\r\n          setPlace={setPlace}\r\n        />\r\n        <div>\r\n          {loading &&\r\n            Array(5)\r\n              .fill()\r\n              .map((a) => (\r\n                <Skeleton key={a} height={120} style={{ marginBottom: 20 }} />\r\n              ))}\r\n          {jobs &&\r\n            !loading &&\r\n            jobs.map((job) => (\r\n              <ListItem\r\n                param={job}\r\n                companyName={job.company}\r\n                logoUrl={job.company_logo}\r\n                jobTitle={job.title}\r\n                location={job.location}\r\n                type={job.type}\r\n                created={job.created_at}\r\n                key={job.id}\r\n              />\r\n            ))}\r\n        </div>\r\n      </Content>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Content = styled.section`\r\n  display: grid;\r\n  grid-template-rows: auto;\r\n  grid-template-columns: 1fr 2fr;\r\n  grid-column-gap: 10px;\r\n  margin-top: 42px;\r\n  @media (max-width: 768px) {\r\n    grid-template-rows: repeat(2, auto);\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n","D:\\Meus arquivos\\Projetos\\githubjobs\\src\\routes\\index.js",[],"D:\\Meus arquivos\\Projetos\\githubjobs\\src\\pages\\JobDetail.js",["96","97"],"import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport colors from 'style/colors';\r\nimport { fonts, icons } from 'constants/index';\r\nimport Badge from 'components/Badge';\r\n\r\nexport default function JobDetail() {\r\n  const {\r\n    state: { job },\r\n  } = useLocation();\r\n  return (\r\n    <Container>\r\n      <Aside>\r\n        <BackButton to='/'>\r\n          <img src={icons.back} style={{ marginRight: '5px' }} />\r\n          Voltar para busca\r\n        </BackButton>\r\n        <H4>Como aplicar</H4>\r\n        <ApplyInformation\r\n          dangerouslySetInnerHTML={{ __html: job.how_to_apply }}\r\n        />\r\n      </Aside>\r\n      <Main>\r\n        <div style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n          <JobTitle>{job.title}</JobTitle>\r\n          {job.type == 'Full Time' && (\r\n            <Badge style={{ marginLeft: '10px', marginTop: '-8px' }}>\r\n              Full Time\r\n            </Badge>\r\n          )}\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            marginTop: '35px',\r\n          }}\r\n        >\r\n          <Image src={job.company_logo} />\r\n          <div\r\n            style={{\r\n              flexDirection: 'column',\r\n              display: 'flex',\r\n              marginLeft: '20px',\r\n            }}\r\n          >\r\n            <CompanyName>{job.company}</CompanyName>\r\n            <Location>\r\n              <Icon src={icons.world} />\r\n              {job.location}\r\n            </Location>\r\n          </div>\r\n        </div>\r\n        <JobInformation dangerouslySetInnerHTML={{ __html: job.description }} />\r\n      </Main>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.section`\r\n  display: grid;\r\n  grid-template-rows: auto;\r\n  grid-template-columns: 1fr 3fr;\r\n  grid-gap: 25px;\r\n  padding-top: 20px;\r\n  @media (max-width: 768px) {\r\n    grid-template-rows: repeat(2, auto);\r\n    grid-template-columns: auto;\r\n  }\r\n`;\r\n\r\nconst Icon = styled.img`\r\n  width: 15px;\r\n  height: 15px;\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst ApplyInformation = styled.span`\r\n  color: ${colors.secondary};\r\n  font-size: 14px;\r\n  line-height: 21px;\r\n  font-family: ${fonts.poppins};\r\n  word-break: break-word;\r\n`;\r\n\r\nconst Aside = styled.aside`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst CompanyName = styled.h5`\r\n  margin-bottom: 10px;\r\n  font-size: 18px;\r\n  line-height: 21px;\r\n  color: #334680;\r\n  font-family: ${fonts.roboto};\r\n  text-transform: capitalize;\r\n`;\r\n\r\nconst Location = styled.small`\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  font-size: 12px;\r\n  font-family: ${fonts.roboto};\r\n  color: ${colors.gray};\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 42px;\r\n  height: 42px;\r\n  border-radius: 4px;\r\n  object-fit: cover;\r\n`;\r\nconst H4 = styled.h4`\r\n  font-family: ${fonts.poppins};\r\n  color: ${colors.gray};\r\n  margin: 36px 0 16px 0;\r\n  text-transform: uppercase;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst JobInformation = styled.p`\r\n  margin-top: 32px;\r\n  font-family: ${fonts.roboto};\r\n  font-weight: 400;\r\n  font-size: 16px;\r\n  line-height: 150%;\r\n  p,\r\n  ul li {\r\n    color: #334680;\r\n  }\r\n  p {\r\n    font-weight: 400;\r\n    font-size: 16px;\r\n    font-family: ${fonts.roboto};\r\n    line-height: 150%;\r\n    margin-top: 10px;\r\n  }\r\n`;\r\n\r\nconst JobTitle = styled.h1`\r\n  color: ${colors.secondary};\r\n  font-size: 24px;\r\n  line-height: 28px;\r\n  font-weight: bold;\r\n  font-family: ${fonts.roboto};\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Main = styled.main``;\r\n\r\nconst BackButton = styled(Link)`\r\n  color: #1e86ff !important;\r\n  text-decoration: none;\r\n  display: flex;\r\n  align-items: center;\r\n  font-family: ${fonts.poppins};\r\n`;\r\n","D:\\Meus arquivos\\Projetos\\githubjobs\\src\\pages\\NotFound.js",[],"D:\\Meus arquivos\\Projetos\\githubjobs\\src\\components\\Badge.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":45,"column":34,"nodeType":"104","messageId":"105","endLine":45,"endColumn":36},{"ruleId":"106","severity":1,"message":"107","line":46,"column":27,"nodeType":"108","messageId":"109","endLine":46,"endColumn":29},{"ruleId":"110","severity":1,"message":"111","line":1,"column":15,"nodeType":"112","messageId":"113","endLine":1,"endColumn":18},{"ruleId":"114","severity":1,"message":"115","line":21,"column":6,"nodeType":"116","endLine":21,"endColumn":28,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":17,"column":11,"nodeType":"120","endLine":17,"endColumn":66},{"ruleId":"106","severity":1,"message":"107","line":28,"column":21,"nodeType":"108","messageId":"109","endLine":28,"endColumn":23},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'url' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'desc'. Either include it or remove the dependency array.","ArrayExpression",["123"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},"Update the dependencies array to be: [loc, fullTime, place, desc]",{"range":"126","text":"127"},[738,760],"[loc, fullTime, place, desc]"]